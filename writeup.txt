Our project is about Wumpus world - Wumpus works as the following ( lmk what to add )
-----------------------------------------------------------------------------------------------------------------------
1. The wumpus world is a grid of rooms. Each room has 4 sides (north, south, east, west). Each side may or may not have a wall.
2. The wumpus world has pits in some rooms. If you enter a room with a pit, you fall into the pit and die.
3. The wumpus world has a wumpus in some room. If you enter the room with the wumpus, the wumpus eats you and you die.
4. The wumpus world has gold in some room. If you enter the room with the gold, you can grab the gold and gain 1 point.
5. You can move from room to room by going through a side. (N,E,S,W) You can only go through a side if there is no wall in the way.
6. You can shoot an arrow through a side. The arrow is shot until it hits a wall or wumpus. If it hits a wall, it stops. If it hits the wumpus, the wumpus dies and you gain 1 point.
7. You can feel a breeze if there is a pit in an adjacent room. You can smell a stench if there is a wumpus in an adjacent room.
8. You can see a glitter if there is gold in the room you are in.
9. You can see a bump if you try to move into a wall.
10. You can hear a scream if you kill the wumpus.
11. You can see a glitter if you grab the gold.
12. There is only one wumpus, one gold, any number of pits, and one entrance to the wumpus world.
13. The wumpus world is a 4x4 grid.
14. There is only one player.
15. The player can move, shoot, grab, and climb.
16. The player can only shoot one arrow.
17. The player can only move once per turn.
18. The player can only shoot once per turn.
19. A production system is used to determine the player's actions.
20. The player's actions are determined by the production system's rules.
21. The production system's rules are based on the player's percepts.
22. The player's percepts are determined by the wumpus world's states.
23. The players actions are counted and considered a turn.
-----------------------------------------------------------------------------------------------------------------------

It was implemented by the following steps: we can more indepth about our classes once we start the paper
-----------------------------------------------------------------------------------------------------------------------
1. The wumpus world is a grid of rooms. Each room has 4 sides (north, south, east, west). Each side may or may not have a wall. ( 4x4 grid ) and we decided to use a 2d array to represent the grid
2. The wumpus world has pits in some rooms. If you enter a room with a pit, you fall into the pit and die. ( each room aside from the entrance has a 20% chance of having a pit ) which we used a random number generator to determine if a room has a pit or not using our 20% chance probability
3. The wumpus world has a wumpus in some room. If you enter the room with the wumpus, the wumpus eats you and you die. ( the wumpus is placed in a random room aside from the entrance)
4. There is gold in a random room aside from the entrance and the room with the wumpus. ( we placed the gold at random, if room had wumpus in it we placed gold in another room (yet to implement))
5. There is a logical agent that can move, shoot, grab, and climb. ( the agent is the player, which we were our selves at first to build the game, once the game was built we decided to make the agent a logical agent which is done by using a map of the world and using the percepts to determine the next action) ) 
(Also we implemented functions in the agent class that could interact with main.py) There were also some problems with this at first and had to a few restructing (we can go into more detail about this later)
6. The player can move from room to room by going through a side. You can only go through a side if there is no wall in the way. (We made made a function to validate the move and check if there is a wall in the way)
7. The player can shoot an arrow in the direction they are facing until a wall is hit or the wumpus is hit. ( we made a function to shoot until a wall is hit or the wumpus is hit)
8. The player can grab the gold if they are in the room with the gold, and then must exit the wumpus world on the tile they spawned on. (1,1) 
9. The player can only climb out and only if they have the gold. ( we made a function to check if the player has the gold and if they are in the room they spawned in (yet to implement))
-----------------------------------------------------------------------------------------------------------------------

Our production system consisted of the following rules: we can add more as come closer to completion
-----------------------------------------------------------------------------------------------------------------------
1. If you feel a breeze, you can infer that there is a pit in an adjacent room. ( we made a function to check for all pits and then place breeze to all adjacent rooms )
2. If you smell a stench, you can infer that there is a wumpus in an adjacent room. ( we made a function to check for wumpus and then place stench to all adjacent rooms )
3. If you see a glitter, you can infer that there is gold in the room you are in. ( simply toggle glitter to true if gold exist in the room )
4. If you hit a bump, you can infer that there is a wall in the room you are in. ( simply toggle bump to true if wall exist in the room in the direction where there is a wall and the player is trying to move )
5. If you see a scream, you can infer that you killed the wumpus. ( yet to implement, thinking about trigging all adjacent rooms in a row and column to scream if the wumpus is killed )
6. Agent has one arrow, if the agent shoots the arrow and hits the wumpus, the agent will get a scream and the wumpus will die. ( yet to implement scream )
7. If the agent shoots the arrow and hits a wall, the agent can infer that the arrow hit the wall and wumpus did not die and in that direction.
8. If the agent shoots the arrow and hits the wumpus, the agent can infer that the arrow hit the wumpus and wumpus died and in that direction.
9. Agent can turn left or right and face that direction, and then move in that direction.
10. Agent can back track using a map and percepts to determine the best move.
-----------------------------------------------------------------------------------------------------------------------

conclusion: tbh : i think it would be hard to write this as of now 
-----------------------------------------------------------------------------------------------------------------------
conclusion here
-----------------------------------------------------------------------------------------------------------------------